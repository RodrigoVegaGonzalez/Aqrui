// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "12/06/2023 17:42:58"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module full_adder (
	a_i,
	b_i,
	c_i,
	s_o,
	c_o);
input 	a_i;
input 	b_i;
input 	c_i;
output 	s_o;
output 	c_o;

// Design Ports Information
// s_o	=>  Location: PIN_V2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c_o	=>  Location: PIN_V1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a_i	=>  Location: PIN_V3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b_i	=>  Location: PIN_V4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c_i	=>  Location: PIN_U2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \s_o~output_o ;
wire \c_o~output_o ;
wire \b_i~input_o ;
wire \a_i~input_o ;
wire \c_i~input_o ;
wire \s_o~0_combout ;
wire \c_o~0_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y28_N16
cycloneive_io_obuf \s_o~output (
	.i(\s_o~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s_o~output_o ),
	.obar());
// synopsys translate_off
defparam \s_o~output .bus_hold = "false";
defparam \s_o~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y28_N23
cycloneive_io_obuf \c_o~output (
	.i(\c_o~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\c_o~output_o ),
	.obar());
// synopsys translate_off
defparam \c_o~output .bus_hold = "false";
defparam \c_o~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y29_N15
cycloneive_io_ibuf \b_i~input (
	.i(b_i),
	.ibar(gnd),
	.o(\b_i~input_o ));
// synopsys translate_off
defparam \b_i~input .bus_hold = "false";
defparam \b_i~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y29_N22
cycloneive_io_ibuf \a_i~input (
	.i(a_i),
	.ibar(gnd),
	.o(\a_i~input_o ));
// synopsys translate_off
defparam \a_i~input .bus_hold = "false";
defparam \a_i~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y30_N1
cycloneive_io_ibuf \c_i~input (
	.i(c_i),
	.ibar(gnd),
	.o(\c_i~input_o ));
// synopsys translate_off
defparam \c_i~input .bus_hold = "false";
defparam \c_i~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y29_N16
cycloneive_lcell_comb \s_o~0 (
// Equation(s):
// \s_o~0_combout  = \b_i~input_o  $ (\a_i~input_o  $ (\c_i~input_o ))

	.dataa(\b_i~input_o ),
	.datab(\a_i~input_o ),
	.datac(gnd),
	.datad(\c_i~input_o ),
	.cin(gnd),
	.combout(\s_o~0_combout ),
	.cout());
// synopsys translate_off
defparam \s_o~0 .lut_mask = 16'h9966;
defparam \s_o~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y29_N18
cycloneive_lcell_comb \c_o~0 (
// Equation(s):
// \c_o~0_combout  = (\b_i~input_o  & ((\a_i~input_o ) # (\c_i~input_o ))) # (!\b_i~input_o  & (\a_i~input_o  & \c_i~input_o ))

	.dataa(\b_i~input_o ),
	.datab(\a_i~input_o ),
	.datac(gnd),
	.datad(\c_i~input_o ),
	.cin(gnd),
	.combout(\c_o~0_combout ),
	.cout());
// synopsys translate_off
defparam \c_o~0 .lut_mask = 16'hEE88;
defparam \c_o~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign s_o = \s_o~output_o ;

assign c_o = \c_o~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_F4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_N7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_P28,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
